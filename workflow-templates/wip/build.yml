name: Build

on:
  workflow_call:
    inputs:
      is_app_uccta:
        description: "Specifies whether the app to be built is a UCC Framework Technology Add-on (TA)"
        required: true
        type: boolean
        default: true
    outputs:
      addon_name:
        description: "The name of the Add-On"
        value: ${{ jobs.build-ta.outputs.addon_name }}
      addon_version:
        description: "The version of the Add-On"
        value: ${{ jobs.build-ta.outputs.addon_v }}
      app_name:
        description: "The name of the App"
        value: ${{ jobs.build.outputs.app_name }}
      app_version:
        description: "The version of the App"
        value: ${{ jobs.build.outputs.app_v }}

jobs:
  pre-commit:
    if: ${{ inputs.is_app_uccta == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: pre-commit/action@v3.0.1

  build-ta:
    if: ${{ inputs.is_app_uccta == true }}
    name: Generate TA Bundle (UCC)
    runs-on: ubuntu-latest
    needs:
      - pre-commit
    outputs:
      addon_name: ${{ steps.addon.outputs.name }}
      addon_v: ${{ steps.addon.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade splunk-packaging-toolkit splunk-add-on-ucc-framework
      - name: Get App Info
        id: addon
        run: |
          addon_id=$(cat app.manifest | jq -r '.info.id.name')
          addon_version=$(cat app.manifest | jq -r '.info.id.version')
          echo "name=${addon_id}" >> $GITHUB_OUTPUT
          echo "version=${addon_version}" >> $GITHUB_OUTPUT
        working-directory: ./package
      - name: Build app
        run: |
          ucc-gen build --ta-version ${{ steps.addon.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.addon.outputs.name }}-${{ steps.addon.outputs.version }}-raw-output
          path: output/*
      - run: chmod -R +r output
        shell: bash
      - run: chmod -R go-w output
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: output
          path: output/
      - run: ucc-gen package --path output/${{ steps.addon.outputs.name }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.addon.outputs.name }}-${{ steps.addon.outputs.version }}
          path: ${{ steps.addon.outputs.name }}*.tar.gz

  build:
    # This is for other type of apps such as modular viz, csc, apps, etc
    if: ${{ inputs.is_app_uccta == false }}
    name: Generate App Bundle
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.app.outputs.name }}
      app_v: ${{ steps.app.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade splunk-packaging-toolkit splunk-add-on-ucc-framework
      - name: Get App Info
        id: app
        run: |
          app_id=$(cat app.manifest | jq -r '.info.id.name')
          app_version=$(cat app.manifest | jq -r '.info.id.version')
          echo "name=${app_id}" >> $GITHUB_OUTPUT
          echo "version=${app_version}" >> $GITHUB_OUTPUT
        working-directory: ./package
      - name: Bundle App Source
        run: |
          mkdir dist output
          cp -r package/* output/${{ steps.addon.outputs.name }}
          tar -C output -zcvf dist/${{ steps.app.outputs.name }}-${{ steps.app.outputs.version }}.tgz ${{ steps.app.outputs.name }}/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.addon.outputs.name }}-${{ steps.addon.outputs.version }}.tar.gz
          path: dist/
